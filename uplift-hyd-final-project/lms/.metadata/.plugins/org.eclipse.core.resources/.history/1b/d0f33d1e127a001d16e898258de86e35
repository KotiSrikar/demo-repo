package com.te.lms;

import java.util.List;

import org.junit.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

import com.google.common.collect.Lists;
import com.te.lms.dto.MentorDto;
import com.te.lms.dto.SkillsDto;
import com.te.lms.service.AdminService;


@SpringBootTest
public class TestAdminController {

	@MockBean
	private  AdminService adminService;
	@Autowired
	private  MockMvc mockMvc;

	@Test
	public void testDeletementor() throws Exception {

		MentorDto mentorDto = MentorDto.builder().emailId("s@s.com").employeeId("TE001").mentorName("Srikar")
				.skillsDto(Lists.newArrayList()).build();
		List<SkillsDto> skills = Lists.newArrayList();
		SkillsDto skillsDto = new SkillsDto();
		skillsDto.setSkillName("skill-1");
		skills.add(skillsDto);
		mentorDto.setSkillsDto(skills);

		Mockito.when(adminService.deleteMentor(mentorDto.getEmployeeId())).thenReturn(true);

		mockMvc.perform(MockMvcRequestBuilders.put("/admin/mentor/delete/{}empId", "TE001")
				.contentType(MediaType.APPLICATION_JSON)).andExpect(MockMvcResultMatchers.status().isOk());

	}
}
